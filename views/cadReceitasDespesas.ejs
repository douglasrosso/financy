<!DOCTYPE html>
<html lang="pt-br">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Receitas e Despesas</title>
  <link rel="stylesheet" href="/css/global.css" />
</head>

<body>
  <header>
    <h1>Lançamentos</h1>
    <nav>
      <ul>
        <li><a href="/categorias">Categorias</a></li>
        <li><a href="/cadastro-conta">Contas</a></li>
        <li><a href="/cadastro-usuario">Usuários</a></li>
        <li><a href="/lancamentos">Lançamentos</a></li>
      </ul>
    </nav>
  </header>

  <main>
    <form>
      <% if (receitasDespesas.id) { %>
        <div class="form-group">
          <label for="id">ID:</label>
          <input placeholder="Digite um ID existente para alterar a receita / despesa" type="text" id="id" name="id"
            required disabled value="<%= receitasDespesas.id %>" />
          <!-- <button id="btnEditar" style="<%= receitasDespesas.id ? 'display: none;' : '' %>">Editar existente</button> -->
        </div>
        <div class="form-group">
          <label for="tipo">Tipo:</label>
          <select id="tipo" name="tipo" required <%=receitasDespesas.type ? "disabled" : "" %>>
            <option value="Receita" <%=receitasDespesas.type==="Receita" ? "selected" : "" %>>Receita</option>
            <option value="Despesa" <%=receitasDespesas.type==="Despesa" ? "selected" : "" %>>Despesa</option>
          </select>
        </div>
        <div class="form-group">
          <label for="categorias">Categoria:</label>
          <select id="categorias" name="categorias" required <%=receitasDespesas.categories ? "disabled" : "" %>>
            <% if (receitasDespesas && receitasDespesas.categories) { %>
              <option value="<%= receitasDespesas.categories  %>" selected>
                <%= receitasDespesas.categories %>
              </option>
              <% } %>
          </select>
        </div>
        <div class="form-group">
          <label for="descricao">Descrição:</label>
          <input type="text" id="descricao" name="descricao" required value="<%= receitasDespesas.description %>"
            <%=receitasDespesas.description ? "disabled" : "" %> />
        </div>
        <div class="form-group">
          <label for="valor">Valor:</label>
          <input type="text" id="valor" name="valor" required value="<%= receitasDespesas.value %>"
            <%=receitasDespesas.value ? "disabled" : "" %>/>
        </div>
        <div class="form-group">
          <label for="dataVencimento">Data de Vencimento:</label>
          <input type="date" id="dataVencimento" name="dataVencimento" required value="<%= receitasDespesas.due_date %>"
            <%=receitasDespesas.due_date ? "disabled" : "" %> />
        </div>
        <div class="form-group">
          <label for="dataPagamento">Data de Pagamento:</label>
          <input type="date" id="dataPagamento" name="dataPagamento" value="<%= receitasDespesas.payment_date %>"
            <%=receitasDespesas.payment_date ? "disabled" : "" %> />
        </div>
        <div class="form-group">
          <label for="conta">Conta:</label>
          <select id="conta" name="conta" required <%=receitasDespesas.account ? "disabled" : "" %>>
            <% if (receitasDespesas && receitasDespesas.account) { %>
              <option value="<%= receitasDespesas.account  %>" selected>
                <%= receitasDespesas.account %>
              </option>
              <% } %>
          </select>
        </div>
        <div class="form-group">
          <label for="status">Status:</label>
          <select id="status" name="status" required value="<%= receitasDespesas.status %>">
            <option value="Lançada" <%=receitasDespesas.status==="Lançada" ? "selected" : "" %>>Lançada</option>
            <option value="Confirmada" <%=receitasDespesas.status==="Confirmada" ? "selected" : "" %>>Confirmada
            </option>
            <option value="Paga" <%=receitasDespesas.status==="Paga" ? "selected" : "" %>>Paga</option>
            <option value="Cancelada" <%=receitasDespesas.status==="Cancelada" ? "selected" : "" %>>Cancelada</option>
          </select>
        </div>
        <div class="form-group">
          <label for="comentario">Comentário:</label>
          <div style="display: flex; align-items: center;">
            <textarea draggable="false" style="resize: none; height: 100px; padding: 10px;" id="comentario"
              name="comentario"><%= receitasDespesas.comments %></textarea>
          </div>
        </div>

        <button type="submit">Salvar</button>
        <% } else { %>
          <div class="form-group" style="overflow-x: auto;">
            <table id="tabelaReceitasDespesas">
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Tipo</th>
                  <th>Categorias</th>
                  <th>Descrição</th>
                  <th>Valor</th>
                  <th>Data de vencimento</th>
                  <th>Data da pagamento</th>
                  <th>Conta</th>
                  <th>Status</th>
                  <th>Comentário</th>
                </tr>
              </thead>
              <tbody></tbody>
            </table>
          </div>
          <%}%>


    </form>
  </main>
  <script async type="module">
    import gerarUUID from "/js/gerarUUID.js";
    import baseApi from "/js/baseApi.js";

    window.addEventListener("load", () => {
      const form = document.querySelector("form");
      // const btnEditar = document.getElementById("btnEditar");
      const inputId = document.getElementById("id");

      buscarCategorias();
      buscarContas();
      buscarReceitasDespesas();

      // btnEditar.addEventListener("click", (event) => {
      //   if (inputId.disabled) {
      //     inputId.disabled = false;
      //     btnEditar.textContent = "Cancelar Edição";
      //   } else {
      //     inputId.disabled = true;
      //     inputId.value = "";
      //     btnEditar.textContent = "Editar existente";
      //   }
      // });

      form.addEventListener("submit", (event) => {
        event.preventDefault();
        const categoriaSelecionada = document.getElementById("categorias");
        const contaSelecionada = document.getElementById("conta");
        const formData = new FormData(form);
        const id = formData.get("id");

        const payload = {
          id: id,
          type: formData.get("tipo"),
          categories: categoriaSelecionada.options[categoriaSelecionada.selectedIndex].textContent,
          description: formData.get("descricao"),
          value: formData.get("valor"),
          due_date: formData.get("dataVencimento"),
          payment_date: formData.get("dataPagamento"),
          account: contaSelecionada.options[contaSelecionada.selectedIndex].textContent,
          status: formData.get("status"),
          comments: formData.get("comentario") ?? " ",
        };

        if (id && id.trim() !== "") {
          atualizarReceitaDespesa(id, payload);
        } else {
          payload.id = gerarUUID();
          salvarReceitaDespesa(payload);
        }

        // id = "";
        // inputId.value = "";
        // btnEditar.textContent = "Editar existente";
        // inputId.disabled = true;
        form.reset();
      });
      8
      function buscarCategorias() {
        baseApi("/api/categorias")
          .then((response) => response.json())
          .then((data) => {
            const selectCategorias = document.getElementById("categorias");
            data.forEach((categoria) => {
              const option = document.createElement("option");
              option.value = categoria.id;
              option.textContent = categoria.description;
              selectCategorias.appendChild(option);
            });
          })
          .catch((error) =>
            console.error("Erro ao buscar categorias:", error)
          );
      }

      function buscarContas() {
        baseApi("/api/contas")
          .then((response) => response.json())
          .then((data) => {
            const selectContas = document.getElementById("conta");
            if (!selectContas) {
              console.error("Elemento select não encontrado.");
              return;
            }

            data.forEach((conta) => {
              const option = document.createElement("option");
              option.value = conta.id;
              option.textContent = conta.description;
              selectContas.appendChild(option);
            });
          })
          .catch((error) =>
            console.error("Erro ao buscar contas:", error)
          );
      }


      function buscarReceitasDespesas() {
        baseApi("/api/lancamentos")
          .then((response) => response.json())
          .then((data) => {
            const tabelaReceitasDespesas = document.getElementById("tabelaReceitasDespesas").querySelector("tbody");
            tabelaReceitasDespesas.innerHTML = "";
            data.forEach((receitaDespesa) => {
              const linha = document.createElement("tr");
              linha.innerHTML = `
                            <td>${receitaDespesa.id}</td>
                            <td>${receitaDespesa.type}</td>
                            <td>${receitaDespesa.categories}</td>
                            <td>${receitaDespesa.description}</td>
                            <td>${receitaDespesa.value}</td>
                            <td>${receitaDespesa.due_date}</td>
                            <td>${receitaDespesa.payment_date}</td>
                            <td>${receitaDespesa.account}</td>
                            <td>${receitaDespesa.status}</td>
                            <td>${receitaDespesa.comments}</td>
                        `;
              tabelaReceitasDespesas.appendChild(linha);
            });
          })
          .catch((error) =>
            console.error("Erro ao buscar receitas e despesas:", error)
          );
      }

      function atualizarReceitaDespesa(id, receitaDespesa) {
        baseApi(`/api/lancamentos/${id}`, "PUT", receitaDespesa)
          .then(() => {
            buscarReceitasDespesas();
          })
          .catch((error) =>
            console.error("Erro ao atualizar receita ou despesa:", error)
          );
      }

      function salvarReceitaDespesa(receitaDespesa) {
        baseApi("/api/lancamentos", "POST", receitaDespesa)
          .then(() => {
            buscarReceitasDespesas();
          })
          .catch((error) =>
            console.error("Erro ao salvar receita ou despesa:", error)
          );
      }
    });
  </script>
</body>

</html>